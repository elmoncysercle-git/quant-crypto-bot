name: trade

on:
  schedule:
    - cron: "0 */8 * * *"
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          clean: true
          persist-credentials: true

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          if [ -f requirements-quantum.txt ]; then pip install -r requirements-quantum.txt; fi

      - name: Show repo tree & key files
        run: |
          echo "==== HEAD ====" && git rev-parse HEAD
          echo "==== FILES ====" && git ls-files
          echo "==== config.yml (first 60 lines) ====" && sed -n '1,60p' config.yml || true
          echo "==== bot/trade.py (first 80 lines) BEFORE PATCH ====" && sed -n '1,80p' bot/trade.py || true

      - name: Patch trade.py if old KeyError-prone line exists
        shell: bash
        run: |
          set -e
          if grep -q 'cfg\["exchange"\]\["name"\]' bot/trade.py; then
            repl=$'ex_name = (cfg.get("exchange") or {}).get("name", "kraken")\n    client = make_client(ex_name)'
            sed -i 's/client = make_client(cfg\["exchange"\]\["name"\])/'"$repl"'/g' bot/trade.py
            echo "Patched bot/trade.py on runner."
          else
            echo "No patch needed."
          fi
          echo "==== bot/trade.py (first 80 lines) AFTER PATCH ===="
          sed -n '1,80p' bot/trade.py

      - name: Trade
        env:
          EXCHANGE_KEY: ${{ secrets.EXCHANGE_KEY }}
          EXCHANGE_SECRET: ${{ secrets.EXCHANGE_SECRET }}
          EXCHANGE_PASSWORD: ${{ secrets.EXCHANGE_PASSWORD }}
          DWAVE_API_TOKEN: ${{ secrets.DWAVE_API_TOKEN }}
        run: |
          python -m bot.trade

      - name: Commit state (if changed)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if [ -f state/state.json ]; then
            git add state/state.json
            git diff --cached --quiet || git commit -m "Update state [skip ci]"
            git pull --rebase origin main || true
            git push origin HEAD:main || true
          fi
